angular.module("angularResizable", []).directive("resizable", function () {
    function e(e) {
        void 0 === t ? (t = e, setTimeout(function () {
            t(), t = void 0
        }, 100)) : t = e
    }

    var t;
    return {
        restrict: "AE",
        scope: {
            rDirections: "=",
            rCenteredX: "=",
            rCenteredY: "=",
            rWidth: "=",
            rHeight: "=",
            rFlex: "=",
            rGrabber: "@",
            rDisabled: "@"
        },
        link: function (t, n, r) {
            var i = "flexBasis" in document.documentElement.style ? "flexBasis" : "webkitFlexBasis" in document.documentElement.style ? "webkitFlexBasis" : "msFlexPreferredSize" in document.documentElement.style ? "msFlexPreferredSize" : "flexBasis";
            t.$watch("rWidth", function (e) {
                n[0].style[t.rFlex ? i : "width"] = t.rWidth + "px"
            }), t.$watch("rHeight", function (e) {
                n[0].style[t.rFlex ? i : "height"] = t.rHeight + "px"
            }), n.addClass("resizable");
            var s, a, o, l, u, d = window.getComputedStyle(n[0], null), c = t.rDirections, h = t.rCenteredX ? 2 : 1,
                m = t.rCenteredY ? 2 : 1, v = t.rGrabber ? t.rGrabber : "<span></span>", p = {}, f = function (e) {
                    p.width = !1, p.height = !1, "x" === u ? p.width = parseInt(n[0].style[t.rFlex ? i : "width"]) : p.height = parseInt(n[0].style[t.rFlex ? i : "height"]), p.id = n[0].id, p.evt = e
                }, g = function (e) {
                    return e.touches ? e.touches[0].clientX : e.clientX
                }, x = function (e) {
                    return e.touches ? e.touches[0].clientY : e.clientY
                }, b = function (r) {
                    var d, c = "x" === u ? o - g(r) : o - x(r);
                    switch (l) {
                        case"top":
                            d = t.rFlex ? i : "height", n[0].style[d] = a + c * m + "px";
                            break;
                        case"bottom":
                            d = t.rFlex ? i : "height", n[0].style[d] = a - c * m + "px";
                            break;
                        case"right":
                            d = t.rFlex ? i : "width", n[0].style[d] = s - c * h + "px";
                            break;
                        case"left":
                            d = t.rFlex ? i : "width", n[0].style[d] = s + c * h + "px"
                    }
                    if($("#leftPanel") && $("#leftPanel").width()) {
                        $("#rightPanel1").css("margin-left", $("#leftPanel").width() + 16 + "px"), f(r), e(function () {
                            t.$emit("angular-resizable.resizing", p)
                        })
                    }
                    if($("#leftSidePanel") && $("#leftSidePanel").width()) {
                        $("#centerPanel").css("margin-left", $("#leftSidePanel").width() + 24 + "px"), f(r), e(function () {
                            t.$emit("angular-resizable.resizing", p)
                        })
                    }
                    if($(".sidebar")) {
                        let width = $(".sidebar").width();
                        if (width > 0) {
                            $('.sidebar-close').css("right", width + "px");
                            $('.graph-container').css("margin-right", width + "px");
                            $('#toolbar').css("margin-right", width + "px");
                            $('#outlineContainer').css("right", width + 9 + "px");
                            $('.scrolltop-btn').css('right', width + 40 + "px");
                            $('.scrollBottom-btn').css('right', width + 40 + "px");

                            f(r), e(function () {
                                t.$emit("angular-resizable.resizing", p)
                            })
                        }
                    }
                }, w = function (e) {
                    f(), t.$emit("angular-resizable.resizeEnd", p), t.$apply(), document.removeEventListener("mouseup", w, !1), document.removeEventListener("mousemove", b, !1), document.removeEventListener("touchend", w, !1), document.removeEventListener("touchmove", b, !1), n.removeClass("no-transition")
                }, y = function (e, r) {
                    l = r, u = "left" === l || "right" === l ? "x" : "y", o = "x" === u ? g(e) : x(e), s = parseInt(d.getPropertyValue("width")), a = parseInt(d.getPropertyValue("height")), n.addClass("no-transition"), document.addEventListener("mouseup", w, !1), document.addEventListener("mousemove", b, !1), document.addEventListener("touchend", w, !1), document.addEventListener("touchmove", b, !1), e.stopPropagation && e.stopPropagation(), e.preventDefault && e.preventDefault(), e.cancelBubble = !0, e.returnValue = !1, f(e), t.$emit("angular-resizable.resizeStart", p), t.$apply()
                };
            c.forEach(function (e) {
                var r = document.createElement("div");
                r.setAttribute("class", "rg-" + e), r.innerHTML = v, n[0].appendChild(r), r.ondragstart = function () {
                    return !1
                };
                var i = function (n) {
                    var r = "true" === t.rDisabled;
                    r || 1 !== n.which && !n.touches || y(n, e)
                };
                r.addEventListener("mousedown", i, !1), r.addEventListener("touchstart", i, !1)
            })
        }
    }
});
